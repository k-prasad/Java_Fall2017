<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="hw11">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
    	<pathelement location="${env.HAMCREST_CORE_CS680}"/>
    	    	<pathelement location="${env.JUNIT_CS680}"/>
    </path>
     
              	<path id="run.FacadeTest.classpath">
              		<path refid="hw11.classpath"/>
              		<pathelement location="${env.HAMCREST_CORE_CS680}"/>
              		<pathelement location="${env.JUNIT_CS680}"/>
              		</path>
              	
              	
    <path id="hw11.classpath">
        <pathelement location="bin"/>
        <pathelement location="test/bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>
    <target name="init" depends = "clean">
    	<echo>---------------------------------INIT-------------------------------------</echo>
        <mkdir dir="bin"/>
        <mkdir dir="test/bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="test/bin">
            <fileset dir="test/src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
    	<echo>---------------------------------ANT CLEAN-------------------------------------</echo>
        <delete dir="bin"/>
        <delete dir="test/bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project, FacadeTest" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
    	<echo>---------------------------------BUILD-------------------------------------</echo>
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="hw11.classpath"/>
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="test/bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="test/src"/>
            <classpath refid="hw11.classpath"/>
        </javac>
    </target>
              	
 <target name="FacadeTest">
 <echo>---------------------------------FACADE FS TEST HW11-------------------------------------</echo>
  <mkdir dir="${junit.output.dir}"/>
              				    	
  <junit fork="yes" printsummary="withOutAndErr">
    <formatter type="xml"/>
    <test name="edu.umb.cs.cs680.hw11.FacadeTest" todir="${junit.output.dir}"/>
   <jvmarg line="-ea"/>
    <classpath refid="run.FacadeTest.classpath"/>
    </junit>
    </target>
              	
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="hw11">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.umb.cs.cs680.hw11.FacadeTest" todir="${junit.output.dir}"/>
            <jvmarg line="-ea"/>
            <classpath refid="hw11.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>
